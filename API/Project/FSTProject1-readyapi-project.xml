<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="67667519-7155-4134-9137-3b972275001a" created="3.50.0" activeEnvironment="Default environment" encryptionMode="Not encrypted" name="FSTProject1" projectVersion="" updated="3.50.0 2023-12-13T08:40:33Z" xmlns:con="http://eviware.com/soapui/config"><con:settings/><con:interface xsi:type="con:RestService" id="a0adf307-7cdc-4119-8be2-cf25a5a77832" wadlVersion="http://wadl.dev.java.net/2009/02" name="https://api.github.com" type="rest" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings id="21f68120-9cd8-4c7e-9631-dc5a795e4571"/><con:definitionCache/><con:endpoints><con:endpoint>https://api.github.com</con:endpoint></con:endpoints><con:resource name="Emails" path="/user/emails" id="72a523c5-f471-479e-b7ee-5395567ffddb"><con:settings/><con:parameters/><con:method name="Emails" id="c68c4a4c-d701-4bb6-97d7-28d062de6153" method="GET"><con:settings/><con:parameters/><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>200</con:status><con:params/><con:element>Response</con:element></con:representation><con:request name="Request 1" id="64292ba4-7742-4fa3-9bb5-7234583e5b66" mediaType="application/json"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:parameters/></con:request></con:method></con:resource><con:resource name="Keys" path="/user/keys" id="ef26a692-4769-40c9-9def-52bd0e7d6509"><con:settings/><con:parameters/><con:method name="Keys" id="f071b23c-6cc6-428f-b6af-36b9c407c1be" method="POST"><con:settings/><con:parameters/><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>400 422</con:status><con:params/><con:element xmlns:keys="https://api.github.com/user/keys">keys:Fault</con:element></con:representation><con:representation type="RESPONSE"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>201</con:status><con:params/><con:element xmlns:keys="https://api.github.com/user/keys">keys:Response</con:element></con:representation><con:request name="Request 1" id="4e3e415e-0feb-4156-87a0-35e2bd94fa30" mediaType="application/json"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:parameters/></con:request></con:method></con:resource><con:resource name="KeyId" path="/user/keys/{keyId}" id="c2fb9b7b-fc2b-4d7e-862f-b9021310982c"><con:settings/><con:parameters/><con:method name="KeyId" id="ff1412c0-1f09-4abf-8d86-c3894781959c" method="DELETE"><con:settings/><con:parameters><con:parameter required="true"><con:name>keyId</con:name><con:value>keyId</con:value><con:style>TEMPLATE</con:style><con:default>keyId</con:default><con:path xsi:nil="true"/><con:description xsi:nil="true"/></con:parameter></con:parameters><con:representation type="FAULT"><con:mediaType>application/json; charset=utf-8</con:mediaType><con:status>404</con:status><con:params/><con:element xmlns:key="https://api.github.com/user/keys/keyId">key:Fault</con:element></con:representation><con:representation type="REQUEST"><con:mediaType>application/json</con:mediaType><con:params/></con:representation><con:request name="Request 1" id="539d80d3-416f-45d6-9912-cf194d1b5e9c" mediaType="application/json"><con:settings/><con:endpoint>https://api.github.com</con:endpoint><con:credentials><con:selectedAuthProfile>No Authorization</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:parameters><con:entry key="keyId" value="keyId"/></con:parameters><con:parameterOrder><con:entry>keyId</con:entry></con:parameterOrder></con:request></con:method></con:resource></con:interface><con:testSuite id="67db1ee7-f1a7-4194-b37e-e5e87416b4f6" name="TestSuite"><con:settings id="a51014ec-8c21-4d2d-806e-4dbdf07317ba"/><con:runType>SEQUENTIAL</con:runType><con:testCase id="20bb74e1-6893-4e60-ae70-25d2d78851af" discardOkResults="false" failOnError="false" failTestCaseOnErrors="true" keepSession="false" name="Test Case" searchProperties="true" timeout="0"><con:settings/><con:testStep type="restrequest" name="GET_Request" id="53c8328d-373c-4214-841b-7ad8d4613a21"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/emails" methodName="Emails" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="GET_Request" id="64292ba4-7742-4fa3-9bb5-7234583e5b66" mediaType="application/json"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:originalUri>https://api.github.com/user/emails</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="99a8f612-ce46-4ae7-bb5f-7e8c139c44bd" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>RavinaFST</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="POST_Request" id="392e8c8a-46a4-47f2-be57-23cef90e430e"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/keys" methodName="Keys" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="POST_Request" id="4e3e415e-0feb-4156-87a0-35e2bd94fa30" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request>{
"title": "FSTKey",
"key": "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIJ6Bp4BdytrYx2EEmGcNu17SUlnnAzRMVerGQXdKz+Uq",
"read_only" : true
}</con:request><con:originalUri>https://api.github.com/user/keys</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="ae434077-e1c8-40be-89ea-19d3abf84f4d" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>201</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>RavinaFST</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters/></con:restRequest></con:config></con:testStep><con:testStep type="restrequest" name="DELETE_Request" id="476d568b-a266-4d5a-a186-dc95a330b20c"><con:settings/><con:config service="https://api.github.com" resourcePath="/user/keys/{keyId}" methodName="KeyId" xsi:type="con:RestRequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:restRequest name="DELETE_Request" id="539d80d3-416f-45d6-9912-cf194d1b5e9c" mediaType="application/json" postQueryString="false"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:endpoint>https://api.github.com</con:endpoint><con:request/><con:originalUri>https://api.github.com/user/keys/keyId</con:originalUri><con:assertion type="Valid HTTP Status Codes" id="8c46fa72-0c71-4c5a-9523-863b213ec52e" name="Valid HTTP Status Codes"><con:settings/><con:configuration><codes>200</codes></con:configuration></con:assertion><con:credentials><con:selectedAuthProfile>RavinaFST</con:selectedAuthProfile><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:parameters><con:entry key="keyId" value="keyId"/></con:parameters><con:parameterOrder><con:entry>keyId</con:entry></con:parameterOrder></con:restRequest></con:config></con:testStep><con:properties/><con:reportParameters/></con:testCase><con:properties/><con:reportParameters/></con:testSuite><con:properties/><con:wssContainer/><con:databaseConnectionContainer/><con:jmsConnectionContainer/><con:oAuth2ProfileContainer><con:oAuth2Profile><con:name>RavinaFST</con:name><con:type>OAuth 2.0</con:type><con:accessToken>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</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth2Profile></con:oAuth2ProfileContainer><con:oAuth1ProfileContainer/><con:reporting><con:xmlTemplates/><con:parameters/></con:reporting><con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest"><con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script></con:eventHandlers><con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep"><con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script></con:eventHandlers><con:authRepository><con:oAuth20AuthEntry><con:name>RavinaFST</con:name><con:type>OAuth 2.0</con:type><con:accessToken>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</con:accessToken><con:accessTokenPosition>HEADER</con:accessTokenPosition><con:accessTokenStatus>ENTERED_MANUALLY</con:accessTokenStatus><con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus><con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow><con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod><con:jwtConfiguration/><con:responseType>id_token</con:responseType></con:oAuth20AuthEntry></con:authRepository><con:tags/></con:soapui-project>